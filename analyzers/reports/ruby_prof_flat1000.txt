Measure Mode: wall_time
Thread ID: 260
Fiber ID: 240
Total: 0.050229
Sort by: self_time

 %self      total      self      wait     child     calls  name                           location
 43.55      0.022     0.022     0.000     0.000      154   Array#select                   
 20.07      0.010     0.010     0.000     0.000     1000   Array#all?                     
  9.82      0.049     0.005     0.000     0.044       10   Array#each                     
  5.73      0.003     0.003     0.000     0.000     2001   String#split                   
  4.50      0.007     0.002     0.000     0.005     1696   Array#map                      
  3.59      0.004     0.002     0.000     0.002      846   <Class::Date>#parse            
  1.75      0.001     0.001     0.000     0.000     1692   Regexp#match                   
  1.61      0.001     0.001     0.000     0.000     2328   String#upcase                  
  1.33      0.003     0.001     0.000     0.002      846   Object#parse_session           /Users/kgoryachev/projects/ruby/hardcode/rails-optimization-task1/task-1.rb:27
  0.97      0.000     0.000     0.000     0.000      846   String#gsub!                   
  0.90      0.001     0.000     0.000     0.000      309   Array#sort                     
  0.74      0.000     0.000     0.000     0.000      846   MatchData#begin                
  0.58      0.000     0.000     0.000     0.000      846   Date#iso8601                   
  0.48      0.000     0.000     0.000     0.000     1078   Hash#merge                     
  0.46      0.000     0.000     0.000     0.000      154   Object#parse_user              /Users/kgoryachev/projects/ruby/hardcode/rails-optimization-task1/task-1.rb:17
  0.46      0.000     0.000     0.000     0.000     1692   String#to_i                    
  0.45      0.000     0.000     0.000     0.000      154   Array#any?                     
  0.42      0.000     0.000     0.000     0.000     1732   Date#<=>                       
  0.36      0.000     0.000     0.000     0.000        1   JSON::Ext::Generator::GeneratorMethods::Hash#to_json 
  0.36      0.000     0.000     0.000     0.000        1   <Class::IO>#write              
  0.33      0.000     0.000     0.000     0.000      846   String#[]=                     
  0.21      0.000     0.000     0.000     0.000      155   Array#join                     
  0.19      0.000     0.000     0.000     0.000      154   Class#new                      
  0.19      0.000     0.000     0.000     0.000      846   Integer#div                    
  0.17      0.000     0.000     0.000     0.000      846   MatchData#end                  
  0.12      0.000     0.000     0.000     0.000      154   User#initialize                /Users/kgoryachev/projects/ruby/hardcode/rails-optimization-task1/task-1.rb:11
  0.10      0.000     0.000     0.000     0.000      308   Integer#to_s                   
  0.09      0.000     0.000     0.000     0.000        1   Array#uniq                     
  0.09      0.000     0.000     0.000     0.000      308   String#+                       
  0.09      0.000     0.000     0.000     0.000        1   <Class::IO>#read               
  0.07      0.050     0.000     0.000     0.050        1   Object#work                    /Users/kgoryachev/projects/ruby/hardcode/rails-optimization-task1/task-1.rb:46
  0.05      0.000     0.000     0.000     0.000      154   Array#sum                      
  0.05      0.000     0.000     0.000     0.000      154   Array#max                      
  0.05      0.000     0.000     0.000     0.000      154   Array#reverse                  
  0.04      0.000     0.000     0.000     0.000      157   Array#count                    
  0.03      0.050     0.000     0.000     0.050        1   [global]#                      analyzers/ruby_prof_flat.rb:10
  0.01      0.010     0.000     0.000     0.010        7   Object#collect_stats_from_users /Users/kgoryachev/projects/ruby/hardcode/rails-optimization-task1/task-1.rb:38
  0.00      0.000     0.000     0.000     0.000        1   JSON::Ext::Generator::State#initialize 

* recursively called methods

Columns are:

  %self     - The percentage of time spent in this method, derived from self_time/total_time.
  total     - The time spent in this method and its children.
  self      - The time spent in this method.
  wait      - The amount of time this method waited for other threads.
  child     - The time spent in this method's children.
  calls     - The number of times this method was called.
  name      - The name of the method.
  location  - The location of the method.

The interpretation of method names is:

  * MyObject#test - An instance method "test" of the class "MyObject"
  * <Object:MyObject>#test - The <> characters indicate a method on a singleton class.
